name: golines test
on:
  push:
    branches:    
      - main
    tags:
      - '*'
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        go: ["1.20", "1.21"]
    name: golines test (using go ${{ matrix.go }} on ${{ matrix.os }})
    steps:
      - uses: actions/checkout@v2
      - name: test golines
        uses: actions/setup-go@v3        
        with:
          go-version: ${{ matrix.go }}
          cache: true
      - run: make test
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup go
        uses: actions/setup-go@v4
        with:
          # rely on golangci/golangci-lint-action for caching
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # pre-commit needs tags for the current repo
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0
        env:
          # run this separately since it handles it's own caching
          SKIP: golangci-lint
  check-generated-code:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          # we need tags to check generated version
          fetch-depth: 0
      - name: setup go
        uses: actions/setup-go@v4
      - name: generate code
        run: go generate ./...
      - name: check for changes in generated code
        run: |
          git add .
          if ! git diff --cached --exit-code -- .
          then
            echo 'changes detected from `go generate`' >&2
            exit 1
          fi

